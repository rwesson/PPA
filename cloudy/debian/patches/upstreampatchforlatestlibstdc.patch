Author: Gary Ferland
Description: fix mole.h to compile with recent versions of libstdc++, from http://data.nublado.org/patches/changeset_r11053.diff
--- a/source/mole.h
+++ b/source/mole.h
@@ -323,44 +323,6 @@
 
 extern t_mole_global mole_global;
 
-class t_mole_local
-{
-public:
-	void set_location( long nelem, long ion, double *dense );
-	void set_isotope_abundances( void );
-	double sink_rate_tot(const char chSpecies[]) const;
-	double sink_rate_tot(const molecule* const sp) const;
-	double sink_rate(const molecule* const sp, const mole_reaction& rate) const;
-	double sink_rate(const molecule* const sp, const char buf[]) const;
-	double source_rate_tot(const char chSpecies[]) const;
-	double source_rate_tot(const molecule* const sp) const;
-	/** returns the photodissociation rate per unit volume [cm^-3 s^-1] producing monatomic species chSpecies.
-	 * *Excludes* photoionizations of other monatomic species, e.g. N-,PHOTON=>N,e- */
-	double dissoc_rate(const char chSpecies[]) const;
-	double chem_heat(void) const;
-	double findrk(const char buf[]) const;
-	double findrate(const char buf[]) const;
-
-	double grain_area, grain_density, grain_saturation;
-
-	/** total charge in molecules */
-	double elec;
-
-	/** these are source and sink terms for the ionization ladder, for chemical
-	 * processes that remove and add species */
-	double **source , **sink;
-	
-	realnum ***xMoleChTrRate;/***[LIMELM][LIMELM+1][LIMELM+1];*/
-
-	valarray<class molezone> species;
-
-	vector<double> reaction_rks;
-	vector<double> old_reaction_rks;
-	long old_zone;
-};
-
-extern t_mole_local mole;
-
 class molezone {
 public:
 	molezone()
@@ -404,6 +366,44 @@
 
 extern molezone *null_molezone;
 
+class t_mole_local
+{
+public:
+	void set_location( long nelem, long ion, double *dense );
+	void set_isotope_abundances( void );
+	double sink_rate_tot(const char chSpecies[]) const;
+	double sink_rate_tot(const molecule* const sp) const;
+	double sink_rate(const molecule* const sp, const mole_reaction& rate) const;
+	double sink_rate(const molecule* const sp, const char buf[]) const;
+	double source_rate_tot(const char chSpecies[]) const;
+	double source_rate_tot(const molecule* const sp) const;
+	/** returns the photodissociation rate per unit volume [cm^-3 s^-1] producing monatomic species chSpecies.
+	 * *Excludes* photoionizations of other monatomic species, e.g. N-,PHOTON=>N,e- */
+	double dissoc_rate(const char chSpecies[]) const;
+	double chem_heat(void) const;
+	double findrk(const char buf[]) const;
+	double findrate(const char buf[]) const;
+
+	double grain_area, grain_density, grain_saturation;
+
+	/** total charge in molecules */
+	double elec;
+
+	/** these are source and sink terms for the ionization ladder, for chemical
+	 * processes that remove and add species */
+	double **source , **sink;
+	
+	realnum ***xMoleChTrRate;/***[LIMELM][LIMELM+1][LIMELM+1];*/
+
+	valarray<class molezone> species;
+
+	vector<double> reaction_rks;
+	vector<double> old_reaction_rks;
+	long old_zone;
+};
+
+extern t_mole_local mole;
+
 extern molezone *findspecieslocal(const char buf[]);
 
 extern void mole_punch(FILE *punit, const char speciesname[], const char args[], bool lgHeader, bool lgData, double depth);
